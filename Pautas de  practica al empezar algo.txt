


//
1- crear la variables,eventos, funciones
2-  funcion que muestre las marcas en funcion y luego insert htmml y aplicar destructuring
3-  lueog crear una funcion event listener para saleccionar los elementos del objetoo
4 - crear una fucntion flitrar de alto nivel. una funcion dentro de otra
5 - repetir la funcion para cada elemento , con filter chain
ver si se puede solucionar usan funciones sin abordar tantos texto.
6 - imprimir html del filtrados
7 -  crear funcion de limpiar del html reciente
8 - crear funcion que filtre por rango ejemplo precios
9 - 
------------------------
proyecto localstorage 19
COMO emepzar un proyecto
1.1 - visualizar que variables van ser seleccionados
1 -  crear las variables que se van usar y arrays vacios a almacenar
2 -  crear eventlisteners que dispare las funciones y muestre en html 
3 - crear funciones que van obtener el dato y alamcenar
4 - crear validdacion de datos y funcion de mostrarerror  aparte
5 - despues insertar dentro de la funcion mostrarerror un setTimeout para que quite el anuncio
5.5 - crear un un objeto con que contenga los datos y luego otra function que traiga y muestro en html en lista
6 - crear uan function creathtml y mostrar en pantalla
7 -  limpiar el html anterior
8 - limpiar el textarea cada ves se envia la informacion
9 - almacenar la informacion en localstorage , funcion sincronizarstorage
10 - en local storage agregar un or [] para que no colpase las funciones + el llamado crearhtml
10.1 - crear un eventlisteners que actualize el array con el local storage.
11 - funcion de eleminar boton de los tweet del local
12 - agregando btn al boton y html del boton,
13 -  funcion de de tomar el id para depues borrrar
14 - funbcion eliminar los elementos del html con filter (creara otro array nuevo sin el elemento que eliminamos)
despues de eso copiar la funcion creahtml para actualizar los datos del array.


23 - proyecto seguro

- crear contrucctor que tenga parametros de las interfaz
- crear fucion vacia UI
- crear un prototype que genere HTML que va ser agragado en UI
el prototype va tener como funcion agregar el año + interfaz html
- instanciar UI por una variable y luego agregar ui.mas el prototype.
- validar el formulario
    - seleccioanr id para poder vericar cad elemeneto
        primero test del boton submit (intanciar,eventlisteners, function que se ejecute cuando se active event)
    - depues una funcion que tome los demas selecctores y pase por una validdacion
    - mostrare en patanlla la validacion creeando otro prototype
        - dentro del prototyoe se debe crear un div y pasr la validacion de mensaje y error
        - insertar html 
- instanciar el seguro
- calcular cotizacion y insert html













// variable

const marca = document.querySelector('#marca');
const year = document.querySelector('#year');
const minimo = document.querySelector('#minimo');
const maximo = document.querySelector('#maximo');
const puertas = document.querySelector('#puertas');
const transmision = document.querySelector('#transmision');
const color = document.querySelector('#color');

//contenedor de los resultados filtrados
const resultado = document.querySelector('#resultado');

// funcion para obtener el año actual
const max = new Date().getFullYear();
const min = max - 10 ; 

// generar un objeto con la busqueda
const datosBusqueda = {
    marca : '' ,
    year : '' ,
    minimo : '' ,
    maximo : '' ,
    puertas : '' ,
    transmision : '' ,
    color : '' ,
}

//eventos
document.addEventListener('DOMContentLoaded', () => {
    mostrarAutos(); //muestra los autos al cargar

    //Llena las opciones de años
    llenarSelect();
})

        // // Event listener para los select de busqueda largo
        // marca.addEventListener('change', e => {
        //     datosBusqueda.marca = e.target.value;

        // })


busqueda(marca);
busqueda(year);
busqueda(minimo);
busqueda(maximo);
busqueda(puertas);
busqueda(transmision);
busqueda(color);

// Event listener funcion resumida
function busqueda(tipo) {
    tipo.addEventListener('change', e =>{
        datosBusqueda.tipo = e.target.value;
       
        filtrarAuto();
    })  
}



